version: '3.8'

services:
  # Main GTD Coach application
  gtd-coach:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    image: gtd-coach:latest
    container_name: gtd-coach-app
    environment:
      # LM Studio configuration
      - LM_STUDIO_URL=http://host.docker.internal:1234
      - LM_STUDIO_MODEL=meta-llama-3.1-8b-instruct
      
      # Langfuse configuration (optional)
      - LANGFUSE_HOST=${LANGFUSE_HOST:-http://host.docker.internal:3000}
      - LANGFUSE_PUBLIC_KEY=${LANGFUSE_PUBLIC_KEY:-}
      - LANGFUSE_SECRET_KEY=${LANGFUSE_SECRET_KEY:-}
      
      # Timing API configuration
      - TIMING_API_KEY=${TIMING_API_KEY:-}
      - TIMING_MIN_MINUTES=${TIMING_MIN_MINUTES:-30}
      
      # Neo4j configuration for Graphiti
      - NEO4J_URI=${NEO4J_URI:-bolt://neo4j:7687}
      - NEO4J_USERNAME=${NEO4J_USERNAME:-neo4j}
      - NEO4J_PASSWORD=${NEO4J_PASSWORD:-}
      
      # Application settings
      - PYTHONPATH=/app
      - TEST_MODE=false
      - VERBOSE_MODE=${VERBOSE_MODE:-false}
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./summaries:/app/summaries
      - ./config:/app/config:ro
    networks:
      - gtd-network
    depends_on:
      - neo4j
    restart: unless-stopped

  # Neo4j database for Graphiti memory
  neo4j:
    image: neo4j:5-community
    container_name: gtd-neo4j
    environment:
      - NEO4J_AUTH=${NEO4J_USERNAME:-neo4j}/${NEO4J_PASSWORD:-gtd-password}
      - NEO4J_PLUGINS=["apoc", "graph-data-science"]
      - NEO4J_dbms_memory_pagecache_size=512m
      - NEO4J_dbms_memory_heap_max__size=512m
    ports:
      - "7474:7474"  # Browser
      - "7687:7687"  # Bolt
    volumes:
      - neo4j-data:/data
      - neo4j-logs:/logs
    networks:
      - gtd-network
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "${NEO4J_USERNAME:-neo4j}", "-p", "${NEO4J_PASSWORD:-gtd-password}", "RETURN 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Test runner service
  test-runner:
    build:
      context: .
      dockerfile: Dockerfile
      target: testing
    image: gtd-coach:test
    container_name: gtd-coach-tests
    environment:
      - TEST_MODE=true
      - MOCK_EXTERNAL_APIS=${MOCK_EXTERNAL_APIS:-true}
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USERNAME=neo4j
      - NEO4J_PASSWORD=${NEO4J_PASSWORD:-gtd-password}
      - PYTHONPATH=/app
      - PYTEST_WORKERS=${PYTEST_WORKERS:-auto}
    volumes:
      - ./tests:/app/tests:ro
      - ./gtd_coach:/app/gtd_coach:ro
      - ./test-results:/app/test-results
      - ./.pytest_cache:/app/.pytest_cache
    networks:
      - gtd-network
    depends_on:
      neo4j:
        condition: service_healthy
    profiles:
      - test

  # Development environment with hot reload
  dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    image: gtd-coach:dev
    container_name: gtd-coach-dev
    environment:
      - ENVIRONMENT=development
      - DEBUG=true
      - LM_STUDIO_URL=http://host.docker.internal:1234
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USERNAME=neo4j
      - NEO4J_PASSWORD=${NEO4J_PASSWORD:-gtd-password}
      - PYTHONPATH=/app
    volumes:
      - .:/app  # Mount entire directory for hot reload
      - /app/.venv  # Exclude virtual env if it exists
    networks:
      - gtd-network
    depends_on:
      - neo4j
    profiles:
      - dev
    command: /bin/bash
    stdin_open: true
    tty: true

networks:
  gtd-network:
    driver: bridge

volumes:
  neo4j-data:
  neo4j-logs:
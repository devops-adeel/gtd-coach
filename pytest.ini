[pytest]
# Test discovery patterns
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Async test configuration
asyncio_mode = auto
asyncio_default_fixture_loop_scope = function

# Import and execution settings
addopts = 
    --import-mode=importlib
    -v
    --tb=short
    --strict-markers
    --disable-warnings
    -p no:cacheprovider

# Test markers for categorization
markers =
    unit: Unit tests with no external dependencies
    integration: Integration tests that may require mocking
    slow: Tests that take more than 5 seconds
    requires_neo4j: Tests requiring Neo4j database connection (will be skipped)
    requires_api_keys: Tests requiring real API credentials (will be skipped)
    requires_timing: Tests requiring Timing app API
    requires_langfuse: Tests requiring Langfuse connection
    asyncio: Async test functions
    focus: Tests currently being focused on

# Environment variable configuration
env_files =
    .env.test

# Coverage settings
[coverage:run]
source = gtd_coach
omit = 
    */tests/*
    */venv/*
    */__pycache__/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING: